/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthSigninImport } from './routes/auth.signin'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const TasksIndexLazyImport = createFileRoute('/tasks/')()
const TasksNewLazyImport = createFileRoute('/tasks/new')()
const TasksTaskIdLazyImport = createFileRoute('/tasks/$taskId')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TasksIndexLazyRoute = TasksIndexLazyImport.update({
  path: '/tasks/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tasks.index.lazy').then((d) => d.Route))

const TasksNewLazyRoute = TasksNewLazyImport.update({
  path: '/tasks/new',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tasks.new.lazy').then((d) => d.Route))

const TasksTaskIdLazyRoute = TasksTaskIdLazyImport.update({
  path: '/tasks/$taskId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tasks.$taskId.lazy').then((d) => d.Route))

const AuthSigninRoute = AuthSigninImport.update({
  path: '/auth/signin',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/tasks/$taskId': {
      id: '/tasks/$taskId'
      path: '/tasks/$taskId'
      fullPath: '/tasks/$taskId'
      preLoaderRoute: typeof TasksTaskIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/tasks/new': {
      id: '/tasks/new'
      path: '/tasks/new'
      fullPath: '/tasks/new'
      preLoaderRoute: typeof TasksNewLazyImport
      parentRoute: typeof rootRoute
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/auth/signin': typeof AuthSigninRoute
  '/tasks/$taskId': typeof TasksTaskIdLazyRoute
  '/tasks/new': typeof TasksNewLazyRoute
  '/tasks': typeof TasksIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/auth/signin': typeof AuthSigninRoute
  '/tasks/$taskId': typeof TasksTaskIdLazyRoute
  '/tasks/new': typeof TasksNewLazyRoute
  '/tasks': typeof TasksIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/auth/signin': typeof AuthSigninRoute
  '/tasks/$taskId': typeof TasksTaskIdLazyRoute
  '/tasks/new': typeof TasksNewLazyRoute
  '/tasks/': typeof TasksIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth/signin'
    | '/tasks/$taskId'
    | '/tasks/new'
    | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth/signin'
    | '/tasks/$taskId'
    | '/tasks/new'
    | '/tasks'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth/signin'
    | '/tasks/$taskId'
    | '/tasks/new'
    | '/tasks/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AuthSigninRoute: typeof AuthSigninRoute
  TasksTaskIdLazyRoute: typeof TasksTaskIdLazyRoute
  TasksNewLazyRoute: typeof TasksNewLazyRoute
  TasksIndexLazyRoute: typeof TasksIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  AuthSigninRoute: AuthSigninRoute,
  TasksTaskIdLazyRoute: TasksTaskIdLazyRoute,
  TasksNewLazyRoute: TasksNewLazyRoute,
  TasksIndexLazyRoute: TasksIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/signin",
        "/tasks/$taskId",
        "/tasks/new",
        "/tasks/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/auth/signin": {
      "filePath": "auth.signin.tsx"
    },
    "/tasks/$taskId": {
      "filePath": "tasks.$taskId.lazy.tsx"
    },
    "/tasks/new": {
      "filePath": "tasks.new.lazy.tsx"
    },
    "/tasks/": {
      "filePath": "tasks.index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
